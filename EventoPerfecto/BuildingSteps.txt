Installation of the Project:
1. Create  a virtual environment and activate it.
2. Install django


Step by step project building:
1. Starting the project : django-admin startproject <project-name>
2. Starting the app : django-admin startapp <app-name>
3. Project: EventoPerfecto, App: events
4. Create project level templates: Base files
5. Create app level templates:

Date: 14-Oct-2024
Django Forms, linking different pages and bootstrap for designing
Using Django model form to generate post request to fill the data into the database.
1. Adding model forms in django admin
2. Adding the form attribute to custom html and design it using bootstrap
3. Conditions for validation(form.is_valid) and successful entry in the db(form.save()) with the display message of SUCCESS!!
4. listing all the venues(just their names) and attaching a clickable link for more information about that specific venue.

Date: 15-Oct-2024
Search, Update, Delete, Ordering - venue and event || Generating text files dynamically
1.For searching: Input field with search button
                  Linked the button to a searching route(url)
                  View function for querying the db(filter by name)
2.For update: Adding update button to all event and all venue page
               Adding forms and pass value of instance as model instance of selected data to be updated.
               (It automatically fills the data in the form. we just need to change the data to be updated)
               Check validity of the form and save the data.
               Redirects to the display all page.
3.For delete: Adding delete button to all event and all venue page
               deleting the item on click as it redirects to the same page after deleting the data from the db.
4.Ordering: adding the order_by clause to ORM for fetching data in a specific order
             order_by('?') - Randomly fetch data
5.Generating text, csv and pdf file dynamically: first add the corresponding urls and view function.
             save line by line
             save inch by inch append to the empty list using reportlab

Date: 16-Oct-2024 and 17-Oct-2024
Pagination, styling pagination, customizing the django admin panel and user login and logout
1.Pagination: Adding pagination to divide data into multiple pages using paginator class.
2.Styling Pagination:give bootstrap styling to the pagination for easy access.
3.Customizing Admin Panel: Adding different name to site title, site header etc.
4.Login: Show the logout link if logged in and if not logged in show the login link with form on click.
5.Logout: Log out of the website if logged in already.

Date: 18-Oct-2024
User registration

